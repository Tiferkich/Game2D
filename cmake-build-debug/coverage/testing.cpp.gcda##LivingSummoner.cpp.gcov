        -:    0:Source:C:/Users/sakhd/CLionProjects/gameLab3/Unit/Enemy/Summoner/LivingSummoner.cpp
        -:    0:Graph:C:\Users\sakhd\CLionProjects\gameLab3\cmake-build-debug\Tests\CMakeFiles\tests.dir\testing.cpp.gcno
        -:    0:Data:C:\Users\sakhd\CLionProjects\gameLab3\cmake-build-debug\Tests\CMakeFiles\tests.dir\testing.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by sakhd on 26.10.2023.
        -:    3://
        -:    4:
        -:    5:#include "LivingSummoner.h"
        -:    6:#include "UndeadSummoner.h"
        -:    7:
        -:    8:#define STEP 4
        -:    9:
        -:   10:
function _ZN14LivingSummoner11doSomethingER7Dungeon called 5 returned 100% blocks executed 75%
        5:   11:void LivingSummoner::doSomething(Dungeon &dungeon) {
        5:   12:    if (status == Status::dead) {
        5:   12-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 3
        2:   13:        return;
        2:   13-block  0
        -:   14:    }
        -:   15:
        3:   16:    Unit *someone = findTarget(dungeon);
        3:   16-block  0
call    0 returned 3
        3:   17:    if (someone == nullptr) {
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:   18:        status = Status::wandering;
        1:   19:        srand(time(0));
        1:   19-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   19-block  1
call    3 returned 1
        1:   20:        int i = rand() % 4;
call    0 returned 1
        1:   21:        int dx[4] = {1, 0, -1, 0};   // смещения, соответствующие соседям ячейки
        1:   22:        int dy[4] = {0, 1, 0, -1};
        2:   23:        if (coords.first + dy[i] < 0 || coords.second + dx[i] < 0 ||
        1:   23-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
branch  2 taken 1 (fallthrough)
branch  3 taken 0
       3*:   24:            coords.second + dx[i] >= dungeon.getMapLevel().cols() ||
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   24-block  0
call    2 returned 1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   24-block  1
        1:   24-block  2
        1:   24-block  3
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        1:   25:            coords.first + dy[i] >= dungeon.getMapLevel().rows())
        1:   25-block  0
call    0 returned 1
call    1 returned 1
    #####:   26:            return;
    %%%%%:   26-block  0
        -:   27:        try {
        1:   28:            move(dungeon.getMapLevel(), {coords.first + dy[i], coords.second + dx[i]}, dungeon.getListEnemies());
        1:   28-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   28-block  1
    $$$$$:   28-block  2
    $$$$$:   28-block  3
    $$$$$:   28-block  4
    =====:   29:        } catch (...) {}
    $$$$$:   29-block  0
    $$$$$:   29-block  1
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        1:   30:        return;
        1:   30-block  0
        -:   31:    }
        -:   32:    try {
        2:   33:        move(dungeon.getMapLevel(), {someone->getCoords().first, someone->getCoords().second},
        2:   33-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
    $$$$$:   33-block  1
        -:   34:             dungeon.getListEnemies());
        2:   35:        status = Status::aggresion;
        2:   35-block  0
    =====:   36:    } catch (...) {}
    $$$$$:   36-block  0
    $$$$$:   36-block  1
call    0 never executed
call    1 never executed
        -:   37:    try {
        2:   38:        summon(dungeon, {coords.first, coords.second}, dungeon.getHero().first->getLvl() / 2, curHP);
        2:   38-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
call    3 returned 2
branch  4 taken 1 (fallthrough)
branch  5 taken 1 (throw)
        1:   38-block  1
        1:   38-block  2
        1:   39:    } catch (...) {}
        1:   39-block  0
        1:   39-block  1
call    0 returned 1
call    1 returned 1
        -:   40:    try {
        2:   41:        attack(*someone);
        2:   41-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   42:        status = Status::aggresion;
        2:   42-block  0
    =====:   43:    } catch (...) {}
    $$$$$:   43-block  0
    $$$$$:   43-block  1
call    0 never executed
        -:   44:}
        -:   45:
function _ZN14LivingSummoner12becomeUndeadER7Dungeon called 1 returned 100% blocks executed 73%
        1:   46:void LivingSummoner::becomeUndead(Dungeon &dungeon) {
       1*:   47:    if (status != Status::dead) return;
        1:   47-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   47-block  1
        1:   48:    faction = Faction::undead;
        1:   49:    status = Status::dead;
        2:   50:    dungeon.getListEnemies().push_back(
        1:   50-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   51:            {new UndeadSummoner(10, {damage.first, damage.second}, {coords.first, coords.second}, maxHP, maxHP),
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   51-block  0
call    3 returned 1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
    $$$$$:   51-block  1
    $$$$$:   51-block  2
    $$$$$:   51-block  3
branch  8 never executed (fallthrough)
branch  9 never executed
    $$$$$:   51-block  4
call   10 never executed
    $$$$$:   51-block  5
        1:   52:             &dungeon.getMapLevel()[coords.first][coords.second]});
        1:   52-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   52-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   52-block  2
call    7 returned 1
    $$$$$:   52-block  3
    $$$$$:   52-block  4
        1:   53:    (--dungeon.getListEnemies().end())->first->setHeap(true);
        1:   53-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
        1:   54:    (--dungeon.getListEnemies().end())->first->setFaction(Faction::character);
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
        1:   55:    methodAfterDie(dungeon);
call    0 returned 1
        -:   56:}
        -:   57:
function _ZN14LivingSummoner6summonER7DungeonSt4pairIiiEii called 7 returned 43% blocks executed 100%
        7:   58:void LivingSummoner::summon(Dungeon &dungeon, std::pair<int, int> coords, int ratio, int newCurHp) {
        -:   59:    try {
        7:   60:        Isummoner::summon(dungeon, coords, ratio, newCurHp);
        7:   60-block  0
call    0 returned 7
branch  1 taken 3 (fallthrough)
branch  2 taken 4 (throw)
        4:   61:    } catch (...) {
        4:   61-block  0
        4:   61-block  1
call    0 returned 4
        4:   62:        throw;
call    0 returned 4
        4:   63:    }
        4:   63-block  0
call    0 returned 4
        3:   64:    int count = 0;
       15:   65:    for (auto item = --dungeon.getListEnemies().end(); count < 4; --item, ++count) {
        3:   65-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
call    3 returned 12
       15:   65-block  1
branch  4 taken 12
branch  5 taken 3 (fallthrough)
       12:   66:        item->first->setFaction(faction);
       12:   66-block  0
call    0 returned 12
call    1 returned 12
        -:   67:    }
        3:   68:}
        3:   68-block  0
        -:   69:
