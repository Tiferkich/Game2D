        -:    0:Source:C:/Users/sakhd/CLionProjects/gameLab3/Unit/Enemy/Summoner/UndeadSummoner.cpp
        -:    0:Graph:C:\Users\sakhd\CLionProjects\gameLab3\cmake-build-debug\Tests\CMakeFiles\tests.dir\testing.cpp.gcno
        -:    0:Data:C:\Users\sakhd\CLionProjects\gameLab3\cmake-build-debug\Tests\CMakeFiles\tests.dir\testing.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by sakhd on 26.10.2023.
        -:    3://
        -:    4:
        -:    5:#include "UndeadSummoner.h"
        -:    6:
        -:    7:#define STEP 4
        -:    8:
function _ZN14UndeadSummoner11doSomethingER7Dungeon called 11 returned 100% blocks executed 85%
       11:    9:void UndeadSummoner::doSomething(Dungeon &dungeon) {
       11:   10:    if (status == Status::dead) {
       11:   10-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 10
        1:   11:        return;
        1:   11-block  0
        -:   12:    }
        -:   13:
       10:   14:    Unit *someone = findTarget(dungeon);
       10:   14-block  0
call    0 returned 10
       10:   15:    if (someone == nullptr) {
branch  0 taken 1 (fallthrough)
branch  1 taken 9
        1:   16:        status = Status::wandering;
        1:   17:        srand(time(0));
        1:   17-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   17-block  1
call    3 returned 1
        1:   18:        int i = rand() % 4;
call    0 returned 1
        1:   19:        int dx[4] = {1, 0, -1, 0};   // смещения, соответствующие соседям ячейки
        1:   20:        int dy[4] = {0, 1, 0, -1};
        2:   21:        if (coords.first + dy[i] < 0 || coords.second + dx[i] < 0 ||
        1:   21-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
branch  2 taken 1 (fallthrough)
branch  3 taken 0
       3*:   22:            coords.second + dx[i] >= dungeon.getMapLevel().cols() ||
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:   22-block  0
call    2 returned 1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   22-block  1
        1:   22-block  2
        1:   22-block  3
branch  6 taken 0 (fallthrough)
branch  7 taken 1
        1:   23:            coords.first + dy[i] >= dungeon.getMapLevel().rows())
        1:   23-block  0
call    0 returned 1
call    1 returned 1
    #####:   24:            return;
    %%%%%:   24-block  0
        -:   25:        try {
        1:   26:            move(dungeon.getMapLevel(), {coords.first + dy[i], coords.second + dx[i]}, dungeon.getListEnemies());
        1:   26-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   26-block  1
    $$$$$:   26-block  2
    $$$$$:   26-block  3
    $$$$$:   26-block  4
    =====:   27:        } catch (...) {}
    $$$$$:   27-block  0
    $$$$$:   27-block  1
call    0 never executed
call    1 never executed
branch  2 never executed (fallthrough)
branch  3 never executed (throw)
        1:   28:        return;
        1:   28-block  0
        -:   29:    }
        -:   30:    try {
        9:   31:        move(dungeon.getMapLevel(), {someone->getCoords().first, someone->getCoords().second},
        9:   31-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
call    4 returned 9
call    5 returned 9
branch  6 taken 7 (fallthrough)
branch  7 taken 2 (throw)
        2:   31-block  1
        -:   32:             dungeon.getListEnemies());
        7:   33:        status = Status::aggresion;
        7:   33-block  0
        2:   34:    } catch (...) {}
        2:   34-block  0
        2:   34-block  1
call    0 returned 2
call    1 returned 2
        -:   35:    try {
        9:   36:        summon(dungeon, {coords.first, coords.second}, dungeon.getHero().first->getLvl() / 2, curHP);
        9:   36-block  0
call    0 returned 9
call    1 returned 9
call    2 returned 9
call    3 returned 9
branch  4 taken 5 (fallthrough)
branch  5 taken 4 (throw)
        5:   36-block  1
        4:   36-block  2
        4:   37:    } catch (...) {}
        4:   37-block  0
        4:   37-block  1
call    0 returned 4
call    1 returned 4
        -:   38:    try {
        9:   39:        attack(*someone);
        9:   39-block  0
call    0 returned 9
branch  1 taken 7 (fallthrough)
branch  2 taken 2 (throw)
        7:   40:        status = Status::aggresion;
        7:   40-block  0
        2:   41:    } catch (...) {}
        2:   41-block  0
        2:   41-block  1
call    0 returned 2
        -:   42:}
        -:   43:
function _ZN14UndeadSummoner6summonER7DungeonSt4pairIiiEii called 14 returned 50% blocks executed 100%
       14:   44:void UndeadSummoner::summon(Dungeon &dungeon, std::pair<int, int> coords, int ratio, int newCurHp) {
        -:   45:    try {
       14:   46:        Isummoner::summon(dungeon, coords, ratio, newCurHp);
       14:   46-block  0
call    0 returned 14
branch  1 taken 7 (fallthrough)
branch  2 taken 7 (throw)
        7:   47:    } catch (...) {
        7:   47-block  0
        7:   47-block  1
call    0 returned 7
        7:   48:        throw ;
call    0 returned 7
        7:   49:    }
        7:   49-block  0
call    0 returned 7
        7:   50:    int count = 0;
       35:   51:    for (auto item = --dungeon.getListEnemies().end(); count < 4; --item, ++count) {
        7:   51-block  0
call    0 returned 7
call    1 returned 7
call    2 returned 7
call    3 returned 28
       35:   51-block  1
branch  4 taken 28
branch  5 taken 7 (fallthrough)
       28:   52:        item->first->setFaction(faction);
       28:   52-block  0
call    0 returned 28
call    1 returned 28
        -:   53:    }
        7:   54:}
        7:   54-block  0
